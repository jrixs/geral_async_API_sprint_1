
services:
  auth_db:
    container_name: auth_db
    image: postgres:15
    volumes:
      - ./db_pass:/run/secrets/db_pass:ro
      - dbauth:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/movies_auth
      POSTGRES_DB: movies_auth
      POSTGRES_USER: auth
      POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 3s
    expose:
      - "5432"
    networks:
      - authnetwork
    restart: unless-stopped

  auth_redis:
    container_name: auth_redis
    image: redis:7.2.5
    networks:
      - authnetwork
    restart: unless-stopped
  
  auth1: &base-auth
    container_name: auth1
    build:
      context: .
      dockerfile: Dockerfile
    # environment:
    #   - DB_HOST=auth_db
    volumes:
      - ./src:/src
    depends_on:
      - auth_db
      - auth_redis
    networks:
      - authnetwork
    expose:
      - 4081/tcp
    restart: unless-stopped
    entrypoint: >
        sh -c "alembic upgrade head"
    #command: sh -cx "alembic upgrade head && gunicorn -w 3 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:4081 --log-config /src/core/logger --log-level info main:app"
    #         sh -cx "alembic downgrade base && alembic upgrade head && gunicorn -w 3 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:4081 --log-config /src/core/logger --log-level info main:app"
    command: gunicorn -w 3 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:4081 --log-config /src/core/logger --log-level info main:app

  auth2: 
    <<: *base-auth
    container_name: auth2
    expose:
      - 4082/tcp
    command: gunicorn -w 3 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:4082 --log-config /src/core/logger --log-level info main:app

networks:
  authnetwork:
    driver: bridge

volumes:
  dbauth:
